@using Humanizer;
@using Microsoft.Extensions.Hosting;

@page "/"

@if (Tree == null)
{
    <text>Loading...</text>
}
else
{
    <div class="form-group row mb-3">
        <div class="col">
            <input id="filter" class="form-control" type="text" placeholder="Filter" @bind="Filter" @bind:event="oninput">
        </div>
    </div>

    <div class="form-group row">

        <div class="col-auto">
            <div class="btn-group" role="group" aria-label="Third group">
                <button class="btn btn-sm btn-secondary" aria-label="Expand All" @onclick="ExpandAll">
                    <span class="oi oi-plus"></span>
                </button>
                <button class="btn btn-sm btn-secondary" aria-label="Collapse All" @onclick="CollapseAll">
                    <span class="oi oi-minus"></span>
                </button>
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="typeDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Type
            </button>
            <div class="dropdown-menu" aria-labelledby="typeDropdown">
                <a class="dropdown-item mr-5" href="#" @onclick="() => IncludeThemes = !IncludeThemes" @onclick:preventDefault><span class="oi oi-check mr-2 @(IncludeThemes ? "" : "invisible")"></span>Themes</a>
                <a class="dropdown-item mr-5" href="#" @onclick="() => IncludeEpics = !IncludeEpics" @onclick:preventDefault><span class="oi oi-check mr-2 @(IncludeEpics ? "" : "invisible")"></span>Epics</a>
                <a class="dropdown-item mr-5" href="#" @onclick="() => IncludeUserStories = !IncludeUserStories" @onclick:preventDefault><span class="oi oi-check mr-2 @(IncludeUserStories ? "" : "invisible")"></span>User Stories</a>
                <a class="dropdown-item mr-5" href="#" @onclick="() => IncludeIssues = !IncludeIssues" @onclick:preventDefault><span class="oi oi-check mr-2 @(IncludeIssues ? "" : "invisible")"></span>Issues</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item mr-5" href="#" @onclick="() => IncludeBottomUp = !IncludeBottomUp" @onclick:preventDefault><span class="oi oi-check mr-2 @(IncludeBottomUp ? "" : "invisible")"></span>Bottom up work</a>
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn @(SelectedRelease == null ? "btn-muted" : "btn-info") btn-sm dropdown-toggle" type="button" id="releasesDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Release
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="releasesDropdown">
                @foreach (var r in Tree.Releases)
                {
                    var value = r ?? "";
                    var isChecked = SelectedRelease == value;
                    var icon = isChecked ? "" : "invisible";
                    var label = r ?? "(Unspecified)";
                    var handler = new Action(() =>
                    {
                        if (isChecked)
                            SelectedRelease = null;
                        else
                            SelectedRelease = value;
                    });
                    <a class="dropdown-item mr-5" href="#" @onclick="handler" @onclick:preventDefault><span class="oi oi-check mr-2 @icon"></span>@label</a>
                }
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn @(SelectedState == null ? "btn-muted" : "btn-info") btn-sm dropdown-toggle" type="button" id="statesDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                State
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="statesDropdown">
                @foreach (var s in Tree.States)
                {
                    var value = s ?? "";
                    var isChecked = SelectedState == value;
                    var icon = isChecked ? "" : "invisible";
                    var label = s ?? "(Unspecified)";
                    var handler = new Action(() =>
                    {
                        if (isChecked)
                            SelectedState = null;
                        else
                            SelectedState = value;
                    });
                    <a class="dropdown-item mr-5" href="#" @onclick="handler" @onclick:preventDefault><span class="oi oi-check mr-2 @icon"></span>@label</a>
                }
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn @(SelectedAssignee == null ? "btn-muted" : "btn-info") btn-sm dropdown-toggle" type="button" id="assigneeDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Assignee
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="assigneeDropdown">
                @foreach (var a in Tree.Assignees)
                {
                    var value = a ?? "";
                    var isChecked = SelectedAssignee == value;
                    var icon = isChecked ? "" : "invisible";
                    var label = a ?? "(Unassigned)";
                    var handler = new Action(() =>
                    {
                        if (isChecked)
                            SelectedAssignee = null;
                        else
                            SelectedAssignee = value;
                    });
                    <a class="dropdown-item mr-5" href="#" @onclick="handler" @onclick:preventDefault><span class="oi oi-check mr-2 @icon"></span>@label</a>
                }
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn @(SelectedMilestone == null ? "btn-muted" : "btn-info") btn-sm dropdown-toggle" type="button" id="milestonesDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Milestone
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="milestonesDropdown">
                @foreach (var m in Tree.Milestones)
                {
                    var value = m ?? "";
                    var isChecked = SelectedMilestone == value;
                    var icon = isChecked ? "" : "invisible";
                    var label = m ?? "(Unassigned)";
                    var handler = new Action(() =>
                    {
                        if (isChecked)
                            SelectedMilestone = null;
                        else
                            SelectedMilestone = value;
                    });
                    <a class="dropdown-item mr-5" href="#" @onclick="handler" @onclick:preventDefault><span class="oi oi-check mr-2 @icon"></span>@label</a>
                }
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn @(SelectedPriority == null ? "btn-muted" : "btn-info") btn-sm dropdown-toggle" type="button" id="prioritiesDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Priority
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="prioritiesDropdown">
                @foreach (var p in Tree.Priorities)
                {
                    var value = p?.ToString() ?? "";
                    var isChecked = SelectedPriority == value;
                    var icon = isChecked ? "" : "invisible";
                    var label = p?.ToString() ?? "(Unspecified)";
                    var handler = new Action(() =>
                    {
                        if (isChecked)
                            SelectedPriority = null;
                        else
                            SelectedPriority = value;
                    });
                    <a class="dropdown-item mr-5" href="#" @onclick="handler" @onclick:preventDefault><span class="oi oi-check mr-2 @icon"></span>@label</a>
                }
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn @(SelectedCost == null ? "btn-muted" : "btn-info") btn-sm dropdown-toggle" type="button" id="costsDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Cost
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="costsDropdown">
                @foreach (var c in Tree.Costs)
                {
                    var value = c?.ToString() ?? "";
                    var isChecked = SelectedCost == value;
                    var icon = isChecked ? "" : "invisible";
                    var label = c?.ToString() ?? "(Unassigned)";
                    var handler = new Action(() =>
                    {
                        if (isChecked)
                            SelectedCost = null;
                        else
                            SelectedCost = value;
                    });
                    <a class="dropdown-item mr-5" href="#" @onclick="handler" @onclick:preventDefault><span class="oi oi-check mr-2 @icon"></span>@label</a>
                }
            </div>
        </div>

        <div class="dropdown col-auto">
            <button class="btn @(SelectedTeam == null ? "btn-muted" : "btn-info") btn-sm dropdown-toggle" type="button" id="teamDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Teams
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="teamDropdown">
                @foreach (var t in Tree.Teams)
                {
                    var value = t ?? "";
                    var isChecked = SelectedTeam == value;
                    var icon = isChecked ? "" : "invisible";
                    var label = t?.ToString() ?? "(Unassigned)";
                    var handler = new Action(() =>
                    {
                        if (isChecked)
                            SelectedTeam = null;
                        else
                            SelectedTeam = value;
                    });
                    <a class="dropdown-item mr-5" href="#" @onclick="handler" @onclick:preventDefault><span class="oi oi-check mr-2 @icon"></span>@label</a>
                }
            </div>
        </div>

        <div class="dropdown col-auto ml-auto">
            <button class="btn btn-success btn-sm dropdown-toggle" type="button" id="newDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                New Issue
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="newDropdown">
                <a class="dropdown-item" href="https://github.com/dotnet/core/issues/new?template=theme.md&labels=Theme">Theme</a>
                <a class="dropdown-item" href="https://github.com/dotnet/core/issues/new?template=epic.md&labels=Epic">Epic</a>
                <a class="dropdown-item" href="https://github.com/dotnet/core/issues/new?template=user_story.md&labels=User%20Story">User Story</a>
            </div>
        </div>

    </div>

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link @(ShowOpen ? "active": "")" href="#" @onclick="() => ShowOpen = true" @onclick:preventDefault>Open</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(!ShowOpen ? "active": "")" href="#" @onclick="() => ShowOpen = false" @onclick:preventDefault>Closed</a>
        </li>
    </ul>

    <TreeListItem Owner="@this" Nodes="@PageTree.Roots" />
}

@if (TreeService.LoadDateTime != null)
{
    <hr />

    if (@TreeService.LoadDuration == null)
    {
        <div class="text-muted small">Triggered refresh @(TreeService.LoadDateTime?.Humanize())...</div>
    }
    else
    {
        <div class="text-muted small">Last refreshed @(TreeService.LoadDateTime?.Humanize()), took @TreeService.LoadDuration?.Humanize(maxUnit: Humanizer.Localisation.TimeUnit.Second)</div>
    }

    if (Environment.IsDevelopment())
    {
        <button class="btn btn-sm btn-link p-0 mb-3" @onclick="() => TreeService.InvalidateAsync(force: true)">Force refresh</button>
    }
}

